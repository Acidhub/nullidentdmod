{"name":"NullidentdMod","tagline":"Bare simple and minimal identd server that just replies with a random string or customized userid.","body":"NullidentdMod\r\n----------\r\n\r\nVersion 1.1   \r\nNullidentdMod 2014 by AcidHub <acidhub@craft.net.br>   \r\n\r\nWhat\r\n----\r\n\r\nNullidentdMod is intended to be a **bare minimum** identd server.\r\n\r\nThe program implements the auth protocol from [RFC 1413](http://www.rfc-base.org/rfc-1413.html).  This protocol is used to identify active TCP connections.  It depends on the trustworthiness of the server and as such is completely useless as a method of identification.  Unfortunately some applications still require that an identd server is available to query about incoming connections.  nullidentd implements the absolute minimum server to allow these applications to function. It returns a fake response for any request.\r\n\r\nThe auth port is TCP 113.\r\n\r\n\r\nGoals\r\n-----\r\n\r\nNullidentdMod is a single source file less than 150 lines long.  It is intended to be so simple that it is probably bug free.  It can certainly be understood in its entirety with no difficulty.  It should also be somewhat immune to denial of service attacks by following strict timeouts on idle clients.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nNullidentdMod **must** be run from systemd.\r\nThis is archieved by enabling nullidentdmod.socket:\r\n\r\n    # systemctl enable nullidentdmod.socket\r\n\r\n\r\nAs is, NullidentdMod will return always a random userid.\r\n\r\nFor assign a custom userid, copy nullidentdmod.service to /etc/systemd/system/:\r\n\r\n    # cp /usr/lib/systemd/system/nullidentdmod@.service /etc/systemd/system/\r\n\r\nEdit the unit:\r\n\r\n    # vim /etc/systemd/system/nullidentdmod@.service\r\n\r\nAt line 6, write desired userid:\r\n\r\n    ExecStart=/usr/bin/nullidentdmod <userid>\r\n\r\nObviously where is \\<userid\\> you put your custom userid\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}